#!/bin/python3

import requests
from concurrent.futures import ThreadPoolExecutor


BASE_URL='https://www.blackarch.org/blackarch/lastupdate'
MIRROR_LIST='https://raw.githubusercontent.com/BlackArch/blackarch/master/mirror/mirror.lst'
THX = 25
TIMEOUT = 10

states = {
  'isync':  0,
  'osync':  0,
  'wrong':  0,
  'down':   0,
}


def check(url, name, lastupdate):
  global states

  try:
    r = requests.get(url, stream=True, timeout=TIMEOUT)
    repo_statuscode = r.status_code
    repo_lastupdate = r.text

    if repo_lastupdate < lastupdate:
      print(f'[OUT OF DATE] - {name} -> {url}')
      states['osync'] = states['osync'] + 1
    elif repo_lastupdate > lastupdate:
      print(f'[SOMETHING IS WRONG] - {name} -> {url}')
      states['wrong'] = states['wrong'] + 1
    else:
      print(f'[IN SYNC] - {name} -> {url}')
      states['isync'] = states['isync'] + 1
  except:
    print(f'[HOST DOWN?] - {name} -> {url}')
    states['down'] = states['down'] + 1

  return


def main():
  sess = requests.Session()
  mirrorlist = sess.get(MIRROR_LIST)
  lastupdate = sess.get(BASE_URL).text
  num = 1

  with ThreadPoolExecutor(THX) as exe:
    for num, line in enumerate(mirrorlist.iter_lines()):
      try:
        country, url, name = str(line).split('|')
        name = name.strip('\'')
        url = url.replace('$repo/os/$arch', 'lastupdate').rstrip('/')
      except:
        print(f'[SOMETHING IS WRONG] Error: {line}.')

      exe.submit(check, url, name, lastupdate)

  print()
  print('=' * 80)
  print(f'''
in sync:      {states['isync']}
out of sync:  {states['osync']}
down:         {states['down']}
wrong:        {states['wrong']}
total:        {num}
  ''')

  return


if __name__ == '__main__':
  main()

