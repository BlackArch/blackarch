--- src/sqlite-2.8.17/Makefile.in	2005-04-24 00:43:23.000000000 +0200
+++ Makefile.in	2025-06-11 17:59:40.330232545 +0200
@@ -22,7 +22,7 @@
 #
 BCC = @BUILD_CC@ @BUILD_CFLAGS@
 
-# C Compile and options for use in building executables that 
+# C Compile and options for use in building executables that
 # will run on the target platform.  (BCC and TCC are usually the
 # same unless your are cross-compiling.)
 #
@@ -205,7 +205,7 @@
 # files are automatically generated.  This target takes care of
 # all that automatic generation.
 #
-target_source:	$(SRC) $(VDBEHDR) 
+target_source:	$(SRC) $(VDBEHDR)
 	rm -rf tsrc
 	mkdir tsrc
 	cp $(SRC) $(VDBEHDR) tsrc
@@ -267,8 +267,9 @@
 # to a target with a different pointer size, you'll need to manually
 # configure the config.h file.
 #
-config.h:	
+config.h:
 	echo '#include <stdio.h>' >temp.c
+	echo '#include <stdlib.h>' >> temp.c
 	echo 'int main(){printf(' >>temp.c
 	echo '"#define SQLITE_PTR_SZ %d",sizeof(char*));' >>temp.c
 	echo 'exit(0);}' >>temp.c
@@ -277,7 +278,7 @@
 	echo >>config.h
 	rm -f temp.c temp
 
-sqlite.h:	$(TOP)/src/sqlite.h.in 
+sqlite.h:	$(TOP)/src/sqlite.h.in
 	sed -e s/--VERS--/`cat ${TOP}/VERSION`/ \
             -e s/--ENCODING--/$(ENCODING)/ \
                  $(TOP)/src/sqlite.h.in >sqlite.h
@@ -471,12 +472,12 @@
 	$(LTINSTALL) sqlite $(DESTDIR)$(exec_prefix)/bin
 	$(INSTALL) -d $(DESTDIR)$(prefix)/include
 	$(INSTALL) -m 0644 sqlite.h $(DESTDIR)$(prefix)/include
-	$(INSTALL) -d $(DESTDIR)$(exec_prefix)/lib/pkgconfig; 
-	$(INSTALL) -m 0644 sqlite.pc $(DESTDIR)$(exec_prefix)/lib/pkgconfig; 
+	$(INSTALL) -d $(DESTDIR)$(exec_prefix)/lib/pkgconfig;
+	$(INSTALL) -m 0644 sqlite.pc $(DESTDIR)$(exec_prefix)/lib/pkgconfig;
 
-clean:	
+clean:
 	rm -f *.lo *.la *.o sqlite@TARGET_EXEEXT@ libsqlite.la sqlite.h opcodes.*
-	rm -rf .libs .deps 
+	rm -rf .libs .deps
 	rm -f lemon@BUILD_EXEEXT@ lempar.c parse.* sqlite*.tar.gz
 	rm -f $(PUBLISH)
 	rm -f *.da *.bb *.bbg gmon.out
@@ -496,13 +497,13 @@
 	strip sqlite.dll
 
 #target for dll import libraries
-implib: sqlite.lib 
+implib: sqlite.lib
 
 #make Borland C++ and/or Microsoft VC import library for the dll
 #   ignore any errors (usually due to missing programs)
 sqlite.lib: sqlite.dll
 	-implib -a sqlite.lib sqlite.dll
-	-lib /machine:i386 /def:$(TOP)/sqlite.def 
+	-lib /machine:i386 /def:$(TOP)/sqlite.def
 
 distclean:	clean
 	rm -f config.log config.status libtool Makefile config.h
