--- src/easyfuzzer/easyfuzzer.pl	2013-11-15 08:01:03.000000000 +0100
+++ easyfuzzer.pl	2019-06-14 17:09:41.963333349 +0200
@@ -134,7 +134,7 @@
 #    Another special value is __CONTENTLENGTH__ and is for http post requests.
 #    It is always the last value being replaced prior sending the request.
 #    And then there is __CONTENTLENGTH-1__ which is one less.
-#    Usage: 
+#    Usage:
 #       "POST /cgi-bin/login.cgi HTTP/1.0
 #        Content-Length: __CONTENTLENGTH__
 #
@@ -210,7 +210,7 @@
     $smallfuzz = 1;
 }
 if (defined $opt{X}) {
-    $learn_cookies = 1;  
+    $learn_cookies = 1;
     $msdos = 1;
     $encode = 1;
     $web = 1;
@@ -243,7 +243,7 @@
 if (defined $opt{Z}) {
     $trigger = 1;
     ($trigger_file,$trigger_text) = split(/:/, $opt{Z}, 2);
-    ($foo1, $foo2, $trigger_data) = readfile($file);    
+    ($foo1, $foo2, $trigger_data) = readfile($file);
 }
 if (defined $opt{p}) {
     $proxy = $opt{p};
@@ -297,7 +297,7 @@
 $maxtimeout = $connect_timeout + $response_timeout;
 $maxretrycount = 3;
 
-# XXX TODO: 
+# XXX TODO:
 # __SEND__{} option
 # config file for fuzz statements and response analysis
 
@@ -318,9 +318,9 @@
 if ($file eq '') { print "Error: no filename given!\n\n"; shorthelp; }
 
 $SIG{'PIPE'} =sub {
-  print STDOUT "Broken pipe, could not send request!\n"; 
-  print FOUT "Broken pipe, could not send request!\n"; 
-  return 0; 
+  print STDOUT "Broken pipe, could not send request!\n";
+  print FOUT "Broken pipe, could not send request!\n";
+  return 0;
 };
 
 my ($ip, $port, $orig_request) = readfile($file);
@@ -412,7 +412,7 @@
   $request_type = "xml"		if ($orig_request =~ m/Content-type:.*[ b\/]xml/is);
   $request_type = "json"	if ($orig_request =~ m/^Content-Type: .*json/is);
   $request_type = "xml"		if ($orig_request =~ m/<\?xml version=/si);
-  $request_type = "json"	if ($orig_request =~ m/\n\n{\"/s || $orig_request =~ m/\n\r\n{\"/s);
+  $request_type = "json"	if ($orig_request =~ m/\n\n\{\"/s || $orig_request =~ m/\n\r\n\{\"/s);
   print STDOUT "Autodetected $request_type - will perform encoding of fuzz strings\n"	if ($request_type ne "");
 }
 if ($proxy ne "" && $orig_request =~ m#HTTP/#) {
@@ -565,7 +565,7 @@
         if ($found == 0) {
           push @cookiejar, $cookiejartmp[$i];
         }
-      } 
+      }
       undef(@cookiejartmp);
     }
     if ($learn_cookies == 1) {
@@ -1008,9 +1008,9 @@
     my $fuzz;
     my $rexi;
     my $info;
-    
+
     ($fuzz, $rexi, $info) = @_;
-    
+
     if ($request_type eq "xml") {
       if ($fuzz =~ m/[<>]/) {
         $data = $info . "#;Y" . $rexi . "#;Y" . "<![CDATA[" . $fuzz . "]]>";
@@ -1043,7 +1043,7 @@
     if ($print_file == 1) {
       open(FRESP, " > $file.$request_no-resp");
     }
-    
+
     if ($use_udp == 1) {
       $remote = IO::Socket::IP->new(Proto=>"udp", PeerAddr=>$dest, PeerPort=>"$port");
       unless ($remote) {
@@ -1056,7 +1056,7 @@
           $remote = IO::Socket::IP->new(Proto=>"udp", PeerAddr=>$dest, PeerPort=>"$port");
           unless ($remote) {
             print FOUT "Error: cannot connect to udp daemon on $dest:$port\n";
-            die "Error: cannot connect to udp service on $dest:$port, aborting"; 
+            die "Error: cannot connect to udp service on $dest:$port, aborting";
           }
         }
       }
@@ -1085,7 +1085,7 @@
             }
             unless ($remote) {
               print FOUT "Error: cannot connect to SSL daemon on $dest:$port\n";
-              die "Error: cannot connect to SSL daemon on $dest:$port, aborting"; 
+              die "Error: cannot connect to SSL daemon on $dest:$port, aborting";
             }
           }
         }
@@ -1101,7 +1101,7 @@
             $remote = IO::Socket::IP->new(Proto=>"tcp", PeerAddr=>$dest, PeerPort=>"$port", Timeout=>$connect_timeout);
             unless ($remote) {
               print FOUT "Error: cannot connect to daemon on $dest:$port\n";
-              die "Error: cannot connect to daemon on $dest:$port, aborting"; 
+              die "Error: cannot connect to daemon on $dest:$port, aborting";
             }
           }
         }
@@ -1180,7 +1180,7 @@
         close FJAR;
       }
     }
-    
+
    if ($trigger != 2) {
     print STDERR "$response"	if ($print_stderr == 1);
     if ($print_file == 1) {
@@ -1224,7 +1224,7 @@
   my $port = "";
   my $ip = "";
   my $request;
-  
+
   (undef, $target) = split ('-', $file);
   my @targets = split ('\.', $target);
   s/^0+(?=\d)// foreach @targets ;
@@ -1285,7 +1285,7 @@
       $cooks = $cooks . $hdrtmp[$i];
     } else {
       $newreq = $newreq . "$hdrtmp[$i]\r\n";
-      $hdrtmp[$i] = ""	
+      $hdrtmp[$i] = ""
     }
   }
   $newreq = $newreq . "{__COOKIES__}" . "\r\n" . $oldbody;
