# This file is part of BlackArch Linux ( https://www.blackarch.org/ ).
# See COPYING for license details.
#
# from AUR - adapted to you style
#
# Old Contributor: Matthias Fulz < mfulz [at] olznet [dot] de >

pkgname=openvas-scanner
pkgver=23.17.0
pkgrel=1
pkgdesc='OpenVAS Scanner of the Greenbone Community Edition.'
arch=('x86_64' 'aarch64')
url='https://github.com/greenbone/openvas-scanner'
license=('GPL-2.0-only')
depends=('gvm-libs' 'json-glib' 'libbsd' 'libgcrypt' 'redis' 'rsync')
makedepends=('cmake' 'doxygen' 'cargo' 'inetutils')
optdepends=('greenbone-feed-sync: scripts for downloading updated feed informations')
install='openvas.install'
options=(!lto)
source=("https://github.com/greenbone/openvas-scanner/archive/v${pkgver}.tar.gz"
        'openvas-scanner.tmpfiles')
sha512sums=('e594bc9ef98c15359f408b784dcbac1ee9ac454c80a771e0f64ef5df27bcefbae19a8bb63332ff269e2f7da09265d373cc56b6c92652b81e96961fdaa8d46658'
            '3df08a3e16f16a1735a4d6aa09b34fd0c04e4af95ef4264002a7f50447d9e200531551f162571b59e0c61707c09ca25f66e8a17baa8a42e2745752a5a6717672')

prepare() {
  cd "$pkgname-$pkgver"

  sed -i '/-Werror/d' CMakeLists.txt

  cd rust
  export RUSTUP_TOOLCHAIN=stable
  cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  cmake \
  -B build \
  -S "$pkgname-$pkgver" \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
  -DSBINDIR=/usr/bin \
  -DLIBDIR=/usr/lib \
  -DSYSCONFDIR=/etc \
  -DLOCALSTATEDIR=/var \
  -DOPENVAS_DATA_DIR=/var/lib/openvas \
  -DOPENVAS_FEED_LOCK_PATH=/run/gvm/feed-update.lock \
  -DOPENVAS_RUN_DIR=/run/ospd \
  -DOPENVAS_NVT_DIR=/var/lib/openvas/plugins \
  -DBUILD_WITH_NETSNMP=True

  make -C build

  # Build openvasd and scannerctl
  cd "$pkgname-$pkgver/rust"
  export RUSTUP_TOOLCHAIN=stable
  export CARGO_TARGET_DIR=target
  cargo build --frozen --release --all-features
}

package() {
  make DESTDIR="$pkgdir" -C build install

  find "$pkgname-$pkgver/rust/target/release" \
    -maxdepth 1 \
    -executable \
    -type f \
    -exec install -Dm 755 -t "$pkgdir/usr/bin/" {} +

  install -Dm 644 "$pkgname.tmpfiles" "$pkgdir/usr/lib/tmpfiles.d/$pkgname.conf"
}

