Index: xamarin-pkg-msbuild/gen_build_info.sh
===================================================================
--- xamarin-pkg-msbuild.orig/gen_build_info.sh
+++ xamarin-pkg-msbuild/gen_build_info.sh
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/bin/bash
 
 if [ $# -ne 1 ]; then
 	echo "Usage: $0 <filename.cs>"
Index: xamarin-pkg-msbuild/mono/create_bootstrap.sh
===================================================================
--- xamarin-pkg-msbuild.orig/mono/create_bootstrap.sh
+++ xamarin-pkg-msbuild/mono/create_bootstrap.sh
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/bin/bash
 
 # This creates a bootstrap from an exising mono installation
 # This is just to ensure that we have the correct "matched" Roslyn
Index: xamarin-pkg-msbuild/msbuild-deploy.in
===================================================================
--- xamarin-pkg-msbuild.orig/msbuild-deploy.in
+++ xamarin-pkg-msbuild/msbuild-deploy.in
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/bin/bash
 ABSOLUTE_PATH=$(cd `dirname "${BASH_SOURCE[0]}"` && pwd)/`basename "${BASH_SOURCE[0]}"`
 MSBUILD_SRC_DIR=`dirname $ABSOLUTE_PATH`
 mono $MONO_OPTIONS $MSBUILD_SRC_DIR/MSBuild.exe $*
Index: xamarin-pkg-msbuild/eng/cibuild_bootstrapped_msbuild.sh
===================================================================
--- xamarin-pkg-msbuild.orig/eng/cibuild_bootstrapped_msbuild.sh
+++ xamarin-pkg-msbuild/eng/cibuild_bootstrapped_msbuild.sh
@@ -56,6 +56,7 @@ function DownloadMSBuildForMono {
     unzip -q "$msbuild_zip" -d "$artifacts_dir"
     # rename just to make it obvious when reading logs!
     mv $artifacts_dir/msbuild $mono_msbuild_dir
+    sed -i 's#/sh$#/bash#' $artifacts_dir/mono-msbuild/msbuild
     chmod +x $artifacts_dir/mono-msbuild/MSBuild.dll
     rm "$msbuild_zip"
   fi
