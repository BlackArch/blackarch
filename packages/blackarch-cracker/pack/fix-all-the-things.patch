diff -ruN a/enchant/checker/__init__.py b/enchant/checker/__init__.py
--- a/enchant/checker/__init__.py	2011-10-13 17:17:12.000000000 -0400
+++ b/enchant/checker/__init__.py	2013-08-23 11:07:40.349947665 -0400
@@ -48,11 +48,11 @@
 import array
 import warnings
 
-import enchant
-from enchant.errors import *
-from enchant.tokenize import get_tokenizer
-from enchant.utils import bytes, unicode, basestring, next
-from enchant.utils import get_default_language
+from pack import enchant
+from pack.enchant.errors import *
+from pack.enchant.tokenize import get_tokenizer
+from pack.enchant.utils import bytes, unicode, basestring, next
+from pack.enchant.utils import get_default_language
 
 
 class SpellChecker:
diff -ruN a/enchant/checker/tests.py b/enchant/checker/tests.py
--- a/enchant/checker/tests.py	2011-10-13 17:17:12.000000000 -0400
+++ b/enchant/checker/tests.py	2013-08-23 11:09:44.166604575 -0400
@@ -35,11 +35,11 @@
 
 import unittest
 
-import enchant
-import enchant.tokenize
-from enchant.utils import *
-from enchant.errors import *
-from enchant.checker import *
+from pack import enchant
+from pack import enchant.tokenize
+from pack.enchant.utils import *
+from pack.enchant.errors import *
+from pack.enchant.checker import *
 
 
 class TestChecker(unittest.TestCase):
@@ -196,7 +196,7 @@
 
     def test_pwl(self):
         """Test checker loop with PWL."""
-        from enchant import DictWithPWL
+        from pack.enchant import DictWithPWL
         d = DictWithPWL("en_US",None,None)
         txt = "I am sme text to be cheked with personal list of cheked words"
         chkr = SpellChecker(d,txt)
diff -ruN a/enchant/_enchant.py b/enchant/_enchant.py
--- a/enchant/_enchant.py	2011-10-13 17:17:12.000000000 -0400
+++ b/enchant/_enchant.py	2013-08-23 11:10:20.949934534 -0400
@@ -52,9 +52,9 @@
 from ctypes import *
 from ctypes.util import find_library
 
-from enchant import utils
-from enchant.errors import *
-from enchant.utils import unicode
+from pack.enchant import utils
+from pack.enchant.errors import *
+from pack.enchant.utils import unicode
 
 # Locate and load the enchant dll.
 # We've got several options based on the host platform.
diff -ruN a/enchant/__init__.py b/enchant/__init__.py
--- a/enchant/__init__.py	2011-10-13 17:17:12.000000000 -0400
+++ b/enchant/__init__.py	2013-08-23 11:12:14.009930870 -0400
@@ -89,15 +89,15 @@
 import os
 
 try:
-    from enchant import _enchant as _e
+    from pack.enchant import _enchant as _e
 except ImportError:
     if not os.environ.get("PYENCHANT_IGNORE_MISSING_LIB",False):
         raise
     _e = None
 
-from enchant.errors import *
-from enchant.utils import EnchantStr, get_default_language
-from enchant.pypwl import PyPWL
+from pack.enchant.errors import *
+from pack.enchant.utils import EnchantStr, get_default_language
+from pack.enchant.pypwl import PyPWL
 
 #  Due to the unfortunate name collision between the enchant "tokenize" module
 #  and the stdlib "tokenize" module, certain values of sys.path can cause
@@ -890,8 +890,8 @@
 # Run unit tests when called from comand-line
 if __name__ == "__main__":
     import sys
-    import enchant.tests
-    res = enchant.tests.runtestsuite()
+    import pack.enchant.tests
+    res = pack.enchant.tests.runtestsuite()
     if len(res.errors) > 0 or len(res.failures) > 0:
         sys.exit(1)
     sys.exit(0)
diff -ruN a/enchant/tests.py b/enchant/tests.py
--- a/enchant/tests.py	2011-10-13 17:17:12.000000000 -0400
+++ b/enchant/tests.py	2013-08-23 11:14:40.589929203 -0400
@@ -42,10 +42,10 @@
 except ImportError:
     subprocess = None
 
-import enchant
-from enchant import *
-from enchant import _enchant as _e
-from enchant.utils import unicode, raw_unicode, printf, trim_suggestions
+from pack import enchant
+from pack.enchant import *
+from pack.enchant import _enchant as _e
+from pack.enchant.utils import unicode, raw_unicode, printf, trim_suggestions
 
 
 def runcmd(cmd):
@@ -443,19 +443,19 @@
 
     def test_docstrings(self):
         """Test that all our docstrings are error-free."""
-        import enchant
-        import enchant.utils
-        import enchant.pypwl
-        import enchant.tokenize
-        import enchant.tokenize.en
-        import enchant.checker
-        import enchant.checker.CmdLineChecker
+        from pack import enchant
+        from pack import enchant.utils
+        from pack import enchant.pypwl
+        from pack import enchant.tokenize
+        from pack import enchant.tokenize.en
+        from pack import enchant.checker
+        import pack.enchant.checker.CmdLineChecker
         try:
-            import enchant.checker.GtkSpellCheckerDialog
+            import pack.enchant.checker.GtkSpellCheckerDialog
         except ImportError:
             pass
         try:
-            import enchant.checker.wxSpellCheckerDialog
+            import pack.enchant.checker.wxSpellCheckerDialog
         except ImportError:
             pass
         errors = []
@@ -590,9 +590,9 @@
 
 
 def buildtestsuite(recurse=True):
-    from enchant.checker.tests import TestChecker
-    from enchant.tokenize.tests import TestTokenization, TestFilters
-    from enchant.tokenize.tests import TestTokenizeEN
+    from pack.enchant.checker.tests import TestChecker
+    from pack.enchant.tokenize.tests import TestTokenization, TestFilters
+    from pack.enchant.tokenize.tests import TestTokenizeEN
     suite = unittest.TestSuite()
     if recurse:
         suite.addTest(unittest.makeSuite(TestInstallEnv))
diff -ruN a/enchant/tokenize/en.py b/enchant/tokenize/en.py
--- a/enchant/tokenize/en.py	2011-10-13 17:17:12.000000000 -0400
+++ b/enchant/tokenize/en.py	2013-08-23 11:15:12.396590168 -0400
@@ -38,8 +38,8 @@
 
 import unicodedata
 
-import enchant.tokenize
-from enchant.utils import unicode
+from pack import enchant.tokenize
+from pack.enchant.utils import unicode
 
 
 class tokenize(enchant.tokenize.tokenize):
diff -ruN a/enchant/tokenize/__init__.py b/enchant/tokenize/__init__.py
--- a/enchant/tokenize/__init__.py	2011-10-13 17:17:12.000000000 -0400
+++ b/enchant/tokenize/__init__.py	2013-08-23 11:15:32.069926469 -0400
@@ -103,9 +103,9 @@
 import re
 import warnings
 
-import enchant
-from enchant.utils import next, xrange
-from enchant.errors import *
+from pack import enchant
+from pack.enchant.utils import next, xrange
+from pack.enchant.errors import *
 
 #  For backwards-compatability.  This will eventually be removed, but how
 #  does one mark a module-level constant as deprecated?
diff -ruN a/enchant/utils.py b/enchant/utils.py
--- a/enchant/utils.py	2011-10-13 17:17:12.000000000 -0400
+++ b/enchant/utils.py	2013-08-23 11:15:46.596592753 -0400
@@ -47,7 +47,7 @@
 import sys
 import codecs
 
-from enchant.errors import *
+from pack.enchant.errors import *
 
 # Attempt to access local language information
 try:
diff -ruN a/maskgen.py b/maskgen.py
--- a/maskgen.py	2013-08-06 20:52:09.000000000 -0400
+++ b/maskgen.py	2013-08-23 11:05:24.616611099 -0400
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/python2
 # MaskGen - Generate Password Masks
 #
 # This tool is part of PACK (Password Analysis and Cracking Kit)
@@ -269,4 +269,4 @@
             sorting_mode = "optindex"
 
         print "[*] Sorting masks by their [%s]." % sorting_mode
-        maskgen.generate_masks(sorting_mode)
\ No newline at end of file
+        maskgen.generate_masks(sorting_mode)
diff -ruN a/policygen.py b/policygen.py
--- a/policygen.py	2013-07-26 19:49:02.000000000 -0400
+++ b/policygen.py	2013-08-23 11:05:18.306610828 -0400
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/python2
 # PolicyGen - Analyze and Generate password masks according to a password policy
 #
 # This tool is part of PACK (Password Analysis and Cracking Kit)
@@ -203,4 +203,4 @@
     print "    Max strength: l:%s u:%s d:%s s:%s" % (policygen.maxlower, policygen.maxupper, policygen.maxdigit, policygen.maxspecial)
 
     print "[*] Generating [%s] masks." % ("compliant" if not options.noncompliant else "non-compliant")
-    policygen.generate_masks(options.noncompliant)
\ No newline at end of file
+    policygen.generate_masks(options.noncompliant)
diff -ruN a/rulegen.py b/rulegen.py
--- a/rulegen.py	2013-08-08 12:35:40.000000000 -0400
+++ b/rulegen.py	2013-08-23 11:05:59.746610197 -0400
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python2
 # Rulegen.py - Advanced automated password rule and wordlist generator for the 
 #              Hashcat password cracker using the Levenshtein Reverse Path 
 #              algorithm and Enchant spell checking library.
@@ -16,7 +16,7 @@
 import re
 import time
 import operator
-import enchant
+from pack import enchant
 
 from optparse import OptionParser, OptionGroup
 
diff -ruN a/statsgen.py b/statsgen.py
--- a/statsgen.py	2013-08-07 21:38:47.000000000 -0400
+++ b/statsgen.py	2013-08-23 11:05:01.166609591 -0400
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python2
 # StatsGen - Password Statistical Analysis tool
 #
 # This tool is part of PACK (Password Analysis and Cracking Kit)
