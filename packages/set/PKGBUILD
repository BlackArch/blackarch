# This file is part of BlackArch Linux ( http://blackarch.org ).
# See COPYING for license details.

pkgname='set'
pkgver='7.3.13'
pkgrel=5
epoch=1
groups=('blackarch' 'blackarch-social' 'blackarch-exploitation')
pkgdesc='Social-engineer toolkit. Aimed at penetration testing around Social-Engineering.'
arch=('any')
url='https://www.trustedsec.com/downloads/social-engineer-toolkit'
license=('BSD')
makedepends=('git')
depends=('python2' 'python2-beautifulsoup3' 'python2-pexpect' 'python2-crypto'
         'java-environment' 'python2-requests' 'impacket' 'python2-pefile'
         'python2-pillow' 'python2-qrcode')
optdepends=('ettercap: DNS spoofing and ARP cache poisoning capabilities'
            'sendmail: email address spoofing'
            'python2-pefile: advanced AV evasion via hijacking a legit digital certificate'
            'apache: increase speed of web attack vectors'
            'openssl: create self-signed SSL certificates'
            'xterm: default terminal for SET command center'
            'upx: executable packer for better AV evasion'
            'aircrack-ng: rouge access point capabilities'
            'dsniff: DNS spoofing capabilities'
            'python2-cryptography: Encrypted communications'
            'metasploit: metasploit exploit payloads')
options=('!strip')
source=("https://github.com/trustedsec/social-engineer-toolkit/archive/${pkgver}.tar.gz"
        'setoolkit.patch')
sha1sums=('9bac237be60f30714ffd1b23488d3a29260f172a'
          '37831bce5e7932a87950c36ccc31d5159ae7fb4f')
backup=('usr/share/set/config/set_config')

prepare() {
  cd "$srcdir/social-engineer-toolkit-$pkgver"

  # Fix shebands in all se*
  sed -i -e "s|#![ ]*/usr/bin/python$|#!/usr/bin/python2|" \
      -i -e "s|#![ ]*/usr/bin/env python$|#!/usr/bin/env python2|" \
      se*

  # Fix tab-space inconsistencies.
  sed -i 's/\t/    /g' se*
  # 'freehugs' easteregg command: Fix code block bad indentation
  sed -i '194,197s/^/    /' setoolkit

  # Fix all calls to 'python-pycrypto' change to 'python2-crypto'
  grep -Rl python-pycrypto ./ | xargs sed -i 's|python-pycrypto|python2-crypto|g'

  cd "src/core/"

  ## Check if Metasploit is installed
  if [ -d /usr/share/metasploit ]; then
    sed -i 's|/opt/metasploit/apps/pro/msf3|/usr/share/metasploit|g' \
      config.baseline

  fi

  ## Apply httpd directory
  sed -i 's|/var/www|/srv/http|g' config.baseline

  ## Set proper dnsspoof bin
  sed -i 's|/usr/local/sbin/dnsspoof|/usr/bin/dnsspoof|g' config.baseline

  ## Set proper airbase-ng bin
  sed -i 's|/usr/local/sbin/airbase-ng|/usr/bin/airbase-ng|g' config.baseline

  cd $srcdir
  patch -p1 < "$srcdir/setoolkit.patch"
}

package() {
  cd "$srcdir/social-engineer-toolkit-$pkgver"

  mkdir -p "$pkgdir/usr/bin"
  mkdir -p "$pkgdir/usr/share/set"
  mkdir -p "$pkgdir/usr/share/doc/set"

  cp --no-preserve=ownership -R * "$pkgdir/usr/share/set"
  cp --no-preserve=ownership -R readme/* "$pkgdir/usr/share/doc/set"

  # Remove `setup.py`.
  rm "$pkgdir/usr/share/set/setup.py"

  # Fix shebangs in all .py files
  sed -i -e "s|/usr/bin/python$|/usr/bin/python2|" \
      -i -e "s|/usr/bin/env python$|/usr/bin/env python2|" \
      $(find "${pkgdir}" -type f)

  # Joint script to handle default configuration.
  cat > "$pkgdir/usr/bin/setoolkit" << EOF
#!/bin/sh

# Make sure only root can run our script
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

cd /usr/share/set
./setoolkit
EOF

  chmod +x "$pkgdir/usr/bin/setoolkit"
}
