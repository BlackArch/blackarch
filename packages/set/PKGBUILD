pkgname=set
pkgver=5.3.4
pkgrel=1
pkgdesc="Social-engineer toolkit. Aimed at penetration testing around Social-Engineering"
arch=('any')
groups=('blackarch-exploitation' 'blackarch')
url='https://www.trustedsec.com/downloads/social-engineer-toolkit'
license=('BSD')
makedepends=('git')
depends=('python2' 'python2-beautifulsoup3' 'python2-pexpect')
optdepends=('ettercap: DNS spoofing and ARP cache poisoning capabilities'
            'sendmail: email address spoofing'
            'java-runtime: create self-signed JAVA applets and spoof publisher'
            'python2-pefile: advanced AV evasion via hijacking a legit digital certificate'
            'apache: increase speed of web attack vectors'
            'openssl: create self-signed SSL certificates'
            'xterm: default terminal for SET command center'
            'upx: executable packer for better AV evasion'
            'aircrack-ng: rouge access point capabilities'
            'dsniff: DNS spoofing capabilities'
            'python2-pycrypto: Encrypted communications'
            'metasploit: metasploit exploitation payloads')
options=('!strip')
source=('git+https://github.com/trustedsec/social-engineer-toolkit/')
md5sums=('SKIP')
backup=('usr/share/set/config/set_config')

pkgver() {
  cd social-engineer-toolkit
  git describe --tags | sed 's/-.*//'
}

prepare() {
  cd "$srcdir/social-engineer-toolkit"

  # Fix shebangs.
  sed -i 's/python$/python2/g' se*

  # Fix tab-space inconsistencies.
  sed -i 's/\t/    /g' se*

  # Fix file locations.
  # This is better than writing within a static directory.
  find . -type f -exec sed -i 's|src/logs|" + os.getenv("HOME") + "/.set/logs|g' '{}' \;
  find . -type f -exec sed -i '/%s\/config/s|definepath\(()\)\?|os.getenv("HOME") + "/.set"|g' '{}' \;
}

package() {
  cd "$srcdir/social-engineer-toolkit"

  # Base directories.
  install -dm755 "$pkgdir/usr/bin"
  install -dm755 "$pkgdir/usr/share/set"
  install -dm755 "$pkgdir/usr/share/doc/set"

  # Sharable.
  cp --no-preserve=ownership -R config modules src "$pkgdir/usr/share/set"
  cp --no-preserve=ownership -R readme/* README.txt "$pkgdir/usr/share/doc/set"

  # Bin.
  for bin in se* ; do
    install -m755 $bin "$pkgdir/usr/share/set"
    ln -s /usr/share/set/$bin "$pkgdir/usr/bin/$bin"
  done

  # Remove `setup.py`.
  rm "$pkgdir/usr/share/set/setup.py" "$pkgdir/usr/bin/setup.py"

  # Remove the set-provided se-toolkit transition script.
  rm "$pkgdir/usr/bin/setoolkit"

  # We provide our own transition script. The set-provided one is annoying and
  #  incompatible with our directory set-up.
  cat > "$pkgdir/usr/bin/setoolkit" <<EOF
#!/bin/sh
cat >&2 <<INFO
[!] SET is changing to just ./setoolkit instead
[!] se-toolkit is going away, beware.
[!] Use: ./setoolkit from now on.
INFO

/usr/bin/setoolkit
EOF
  chmod +x "$pkgdir/usr/bin/setoolkit"

  # Joint script to handle default configuration.
  rm "$pkgdir/usr/bin/setoolkit"
  cat > "$pkgdir/usr/bin/setoolkit" <<\EOF
#!/bin/sh
if ! [ -f "$HOME/.set/config/set_config" ] ; then
  mkdir -p "$HOME/.set/config"
  cp /usr/share/set/config/set_config "$HOME/.set/config/set_config"
fi

/usr/share/set/setoolkit
EOF
  chmod +x "$pkgdir/usr/bin/setoolkit"
}
