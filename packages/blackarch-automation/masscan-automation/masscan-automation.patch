--- src/MasscanAutomation/masscan_automation.py	2019-01-14 23:32:42.333332466 +0100
+++ masscan_automation.py	2019-01-14 23:33:17.446665795 +0100
@@ -1,3 +1,5 @@
+#!/usr/bin/python2
+
 import os
 import subprocess
 import requests
@@ -21,7 +23,7 @@
 
         for k in host_dict.iterkeys():
             output.write("IP: " + k)
-            output.write(" Ports: " + str(host_dict[k]) + '\n')    
+            output.write(" Ports: " + str(host_dict[k]) + '\n')
         output.close()
 
     except Exception as e:
@@ -32,7 +34,7 @@
         #A dictionary containing the ports/ service_dict that Shodan crawls for.
         #Format: {'Port': service}
         service_dict  = api.service_dict()
-        host_dict     = {} 
+        host_dict     = {}
         service_count = {}
         soup          = BeautifulSoup(results, "lxml")
 
@@ -76,7 +78,7 @@
                 if elems not in service_count:
                     service_count[str('Port ' + elems[0])] = 1
                 else:
-                    service_count[str('Port ' + elems[0]] += 1  
+                    service_count[str('Port ' + elems[0])] += 1
         if (host_dict and service_count):
             print_results(host_dict, service_count)
 
@@ -113,7 +115,7 @@
         parser.add_option('-i', '--ip', help='Argument Takes IP Address as Input')
         parser.add_option('-k', '--key', help='Argument Takes a Shodan API Key as Input')
         (options, args) = parser.parse_args()
-        
+
         if options.ip != None and options.key != None:
             ip_addr = options.ip
             api_key = options.key
