--- src/hoover/hoover.pl	2019-09-04 12:35:03.733333253 +0200
+++ hoover.pl	2019-09-04 12:35:55.653333241 +0200
@@ -10,7 +10,7 @@
 #
 # Copyright (c) 2012 David Nelissen & Xavier Mertens
 # All rights reserved.
-# 
+#
 # Redistribution and use in source and binary forms, with or without
 # modification, are permitted provided that the following conditions
 # are met:
@@ -22,7 +22,7 @@
 # 3. Neither the name of copyright holders nor the names of its
 #    contributors may be used to endorse or promote products derived
 #    from this software without specific prior written permission.
-# 
+#
 # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 # ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 # TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
@@ -38,7 +38,7 @@
 # History
 # -------
 # 2012/01/11	Created
-# 2015/06/09	Fix: root detection 
+# 2015/06/09	Fix: root detection
 #
 
 use strict;
@@ -57,9 +57,9 @@
 my $verbose;
 my $interface;
 my $dumpFile;
-my $ifconfigPath = "/sbin/ifconfig";
-my $iwconfigPath = "/sbin/iwconfig";
-my $tsharkPath   = "/usr/local/bin/tshark";
+my $ifconfigPath = "/usr/bin/ifconfig";
+my $iwconfigPath = "/usr/bin/iwconfig";
+my $tsharkPath   = "/usr/bin/tshark";
 my $options = GetOptions(
 	"verbose"		=> \$verbose,
 	"help"			=> \$help,
@@ -119,10 +119,10 @@
 	while (<TSHARK>) {
 		chomp;
 		my $line = $_;
-		chomp($line = $_); 
+		chomp($line = $_);
 		# Everything exept backslash (some probes contains the ssid in ascii, not usable)
-		#if($line = m/\d+\.\d+ ([a-zA-Z0-9:]+).+SSID=([a-zA-ZÀ-ÿ0-9"\s\!\@\$\%\^\&\*\(\)\_\-\+\=\[\]\{\}\,\.\?\>\<]+)/) { 
-		if($line = m/\d+\.\d+ ([a-zA-Z0-9:_]+).+SSID=([a-zA-ZÀ-ÿ0-9"\s\!\@\$\%\^\&\*\(\)\_\-\+\=\[\]\{\}\,\.\?\>\<]+)/) { 
+		#if($line = m/\d+\.\d+ ([a-zA-Z0-9:]+).+SSID=([a-zA-ZÀ-ÿ0-9"\s\!\@\$\%\^\&\*\(\)\_\-\+\=\[\]\{\}\,\.\?\>\<]+)/) {
+		if($line = m/\d+\.\d+ ([a-zA-Z0-9:_]+).+SSID=([a-zA-ZÀ-ÿ0-9"\s\!\@\$\%\^\&\*\(\)\_\-\+\=\[\]\{\}\,\.\?\>\<]+)/) {
 			if($2 ne "Broadcast") {	# Ignore broadcasts
 				my $macAddress = $1;
 				my $newKey = $2;
@@ -147,7 +147,7 @@
 					($verbose) && print "-- Probe seen before: $newKey [$uniqueSSID]\n";
 				}
 			}
-		}	
+		}
 	}
 }
 else {
@@ -162,7 +162,7 @@
 			sleep(5);
 		}
 	}
-	
+
 }
 
 sub dumpNetworks {
@@ -182,9 +182,9 @@
 		my $lastSeen = sprintf("%04d/%02d/%02d %02d:%02d:%02d", $year+1900, $mon+1, $mday, $hour, $min, $sec);
 		print STDOUT sprintf("!! %-20s %-30s %10s %-20s\n", $detectedSSID{$key}[2],
 		 				 $detectedSSID{$key}[0], $detectedSSID{$key}[1], $lastSeen);
-		($dumpFile) && print DUMP sprintf("%-20s %-30s %10s %-20s\n", 
+		($dumpFile) && print DUMP sprintf("%-20s %-30s %10s %-20s\n",
 						 $detectedSSID{$key}[2], $detectedSSID{$key}[0],
-						 $detectedSSID{$key}[1], $lastSeen); 
+						 $detectedSSID{$key}[1], $lastSeen);
 	}
 	print STDOUT "!! Total unique SSID: $uniqueSSID\n";
 	($dumpFile) && print DUMP "Total unique SSID: $uniqueSSID\n";
