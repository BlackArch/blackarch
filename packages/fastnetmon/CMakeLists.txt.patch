--- CMakeLists.txt.old	2018-10-29 08:21:23.775886981 +0000
+++ CMakeLists.txt	2018-10-29 08:24:14.657951994 +0000
@@ -65,12 +65,12 @@
 
 message(STATUS "C++ compilation flags: ${CMAKE_CXX_FLAGS_RELEASE}")
 
-set(HIREDIS_CUSTOM_INSTALL_PATH "/opt/libhiredis_0_13")
-set(LOG4CPP_CUSTOM_INSTALL_PATH "/opt/log4cpp1.1.1")
-set(JSONC_CUSTOM_INSTALL_PATH "/opt/json-c-0.12")
-set(PFRING_CUSTOM_INSTALL_PATH "/opt/pf_ring_6.0.3")
-set(LIBPCAP_CUSTOM_INSTALL_PATH "/opt/libpcap_1.7.4")
-set(MONGO_C_CUSTOM_INSTALL_PATH "/opt/mongo_c_driver_1_1_9")
+set(HIREDIS_CUSTOM_INSTALL_PATH "/usr")
+set(LOG4CPP_CUSTOM_INSTALL_PATH "/usr")
+set(JSONC_CUSTOM_INSTALL_PATH "/usr")
+set(PFRING_CUSTOM_INSTALL_PATH "/usr")
+set(LIBPCAP_CUSTOM_INSTALL_PATH "/usr")
+set(MONGO_C_CUSTOM_INSTALL_PATH "/usr")
 
 set(FASTNETMON_PROFILER OFF)
 
@@ -142,9 +142,9 @@
 
 if (ENABLE_PFRING_SUPPORT)
     # Set path to manually compiled PF_RING
-    set(PFRING_INCLUDE_DIRS "${PFRING_CUSTOM_INSTALL_PATH}/include")
+    set(PFRING_INCLUDE_DIRS "${PFRING_CUSTOM_INSTALL_PATH}/include/pfring")
 
-    find_library(PFRING_LIBRARIES NAMES pfring PATHS "${PFRING_CUSTOM_INSTALL_PATH}/lib" NO_DEFAULT_PATH)
+    find_library(PFRING_LIBRARIES NAMES pfring PATHS "${PFRING_CUSTOM_INSTALL_PATH}/lib/libpfring" NO_DEFAULT_PATH)
 
     if (NOT PFRING_LIBRARIES)
         message(FATAL_ERROR "Could not find PF_RING")
@@ -153,13 +153,13 @@
     link_directories("${PFRING_CUSTOM_INSTALL_PATH}/lib")
     add_definitions(-DPF_RING)
 
-    if (EXISTS "${PFRING_CUSTOM_INSTALL_PATH}/include/pfring_zc.h" OR EXISTS "/usr/local/include/pfring_zc.h")
-        message(STATUS "We found PF_RING ZC headers and will build PF_RING ZC support")
-        # Enable ZC support
-        add_definitions(-DPF_RING_ZC)
-    else()
-        message(WARNING "We can't find PF_RING ZC header pfring_zc.h in folder /opt/pf_ring/include. Will not compile ZC support") 
-    endif()
+    #if (EXISTS "${PFRING_CUSTOM_INSTALL_PATH}/include/pfring_zc.h" OR EXISTS "/usr/local/include/pfring_zc.h")
+    #    message(STATUS "We found PF_RING ZC headers and will build PF_RING ZC support")
+    #    # Enable ZC support
+    #    add_definitions(-DPF_RING_ZC)
+    #else()
+    #    message(WARNING "We can't find PF_RING ZC header pfring_zc.h in folder /opt/pf_ring/include. Will not compile ZC support") 
+    #endif()
 
     include_directories(${PFRING_INCLUDE_DIRS})
 
@@ -233,9 +233,9 @@
 
     add_library(fast_dpi STATIC fast_dpi.cpp)
 
-    set(NDPI_INCLUDE_DIRS "/opt/ndpi/include/libndpi-1.7.1")
+    set(NDPI_INCLUDE_DIRS "/usr/include")
 
-    find_library(NDPI_LIBRARIES NAMES ndpi PATHS "/opt/ndpi/lib" NO_DEFAULT_PATH)
+    find_library(NDPI_LIBRARIES NAMES ndpi PATHS "/usr/lib" NO_DEFAULT_PATH)
 
     if (NOT NDPI_LIBRARIES)
         message(FATAL_ERROR "Could not find nDPI library")
@@ -258,7 +258,7 @@
 
     add_definitions(-DENABLE_LUA_HOOKS)
 
-    set(LUAJIT_CUSTOM_INSTALL_PATH "/opt/luajit_2.0.4")
+    set(LUAJIT_CUSTOM_INSTALL_PATH "/usr")
 
     link_directories("${LUAJIT_CUSTOM_INSTALL_PATH}/lib")
     include_directories("${LUAJIT_CUSTOM_INSTALL_PATH}/include")
