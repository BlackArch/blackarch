--- src/shitflood/shitflood.py	2016-02-14 15:45:16.650718263 +0100
+++ shitflood.py	2016-02-14 15:46:36.393619592 +0100
@@ -1,7 +1,7 @@
 #!/usr/bin/env python
 # -*- coding: utf-8 -*-
 # ShitFlood IRC Flooder
-# A Socks5 clone flooder for the Internet Relay Chat (IRC) protocol. 
+# A Socks5 clone flooder for the Internet Relay Chat (IRC) protocol.
 # Developed by acidvegas in Python 2.7
 # https://github.com/acidvegas/shitflood/
 # shitflood.py
@@ -68,10 +68,10 @@
         self.sock.settimeout(10)
         self.sock.setproxy(socks.PROXY_TYPE_SOCKS5, self.proxy_server, self.proxy_port)
         self.connect()
-        
+
     def action(self, chan, msg):
         self.sendmsg(chan, '\x01ACTION %s\x01' % msg)
-        
+
     def connect(self):
         try:
             self.sock.connect((self.server, self.port))
@@ -83,7 +83,7 @@
 
     def ctcp(self, target, data):
         self.sendmsg(target, '\001%s\001' % data)
-            
+
     def event_connect(self):
         debug.alert('Successful connection. (%s:%d)' % (self.proxy_server, self.proxy_port))
         self.join(self.channel)
@@ -112,7 +112,7 @@
                     self.nicklist.append(name)
                     self.sendmsg(name, rainbow(self.message))
                     time.sleep(0.5)
-    
+
     def handle_events(self, data):
         args = data.split()
         if   args[0] == 'PING' : self.raw('PONG ' + args[1][1:])
@@ -128,7 +128,7 @@
         elif args[1] == '404' :
             if   'ACTIONs are not permitted' in data:       self.useaction   = False
             elif 'Color is not permitted' in data:          self.usecolor    = False
-            elif 'CTCPs are not permitted' in data:         self.usectcpchan = False            
+            elif 'CTCPs are not permitted' in data:         self.usectcpchan = False
             elif 'You need voice' in data:                  self.usemsg      = False
             elif 'You must have a registered nick' in data: self.usemsg      = False
             elif 'NOTICEs are not permitted' in data:       self.usenotice   = False
@@ -184,20 +184,20 @@
 
     def nick(self, nick):
         self.raw('NICK ' + nick)
-        
+
     def notice(self, target, msg):
         self.raw('NOTICE %s :%s' % (target, msg))
-        
+
     def part(self, chan, msg=None):
         if msg : self.raw('PART %s %s' % (chan, msg))
         else   : self.raw('PART ' + chan)
-        
+
     def raw(self, msg):
         self.sock.send(msg + '\r\n')
-        
+
     def sendmsg(self, target, msg):
         self.raw('PRIVMSG %s :%s' % (target, msg))
-        
+
     def topic(self, chan, text):
         self.raw('TOPIC %s :%s' % (chan, text))
 
@@ -207,10 +207,10 @@
 if len(sys.argv) != 5:
     debug.error_exit('Missing command line arguments! (Usage: shitflood.py <server> <port> <channel> <message>')
 else:
-server  = sys.argv[1]
-port    = sys.argv[2]
-channel = sys.argv[3]
-message = sys.argv[4]
+    server  = sys.argv[1]
+    port    = sys.argv[2]
+    channel = sys.argv[3]
+    message = sys.argv[4]
 if port.isdigit() :
     port = int(port)
 else:
