--- src/bin/subterfuge	2013-12-14 20:30:05.000000000 +0000
+++ /home/ed/build/subterfuge/bin/subterfuge	2014-01-13 21:12:43.841314315 +0000
@@ -31,7 +31,7 @@
 
 	#Thanks to n37div3r5 for the fix to run Subterfuge on a different port
 def main():
-   print "\nSubterfuge courtesy of r00t0v3rr1d3 & 0sm0s1z"
+   print("\nSubterfuge courtesy of r00t0v3rr1d3 & 0sm0s1z")
    usage  = """
   subterfuge [OPTIONS]
   Default usage will run on 127.0.0.1:80"""
@@ -138,50 +138,50 @@
          routermac     = settings.routermac
          smartarp      = settings.smartarp
 
-      print "\n#########################################"
-      print "##       Subterfuge Configuration      ##"
-      print "#########################################"
-      print "Auto Configuration:    " + autoconf          
-      print "Local IP Address:      " + ip      
-      print "Network Gateway:       " + gateway
-      print "Interface:             " + interface
-      print "Router MAC Address     " + routermac
-      print "Dynamic ARP Retention: " + smartarp
+      print("\n#########################################")
+      print("##       Subterfuge Configuration      ##")
+      print("#########################################")
+      print("Auto Configuration:    " + autoconf          )
+      print("Local IP Address:      " + ip      )
+      print("Network Gateway:       " + gateway)
+      print("Interface:             " + interface)
+      print("Router MAC Address     " + routermac)
+      print("Dynamic ARP Retention: " + smartarp)
 
-      print "#########################################"
-      print "Active Modules:    "
+      print("#########################################")
+      print("Active Modules:    ")
 
       for module in installed.objects.all():
          name           = module.name
          active         = module.active
-         print name + ": " + active
+         print(name + ": " + active)
 
-      print "#########################################"
-      print "Active Vectors:    "
+      print("#########################################")
+      print("Active Vectors:    ")
 
       for vector in vectors.objects.all():
          name           = vector.name
          active         = vector.active
-         print name + ": " + active
+         print(name + ": " + active)
 
-      print "#########################################"
-      print "ARP Cache Poison Settings:    "
+      print("#########################################")
+      print("ARP Cache Poison Settings:    ")
 
       for wet in arppoison.objects.all():
          target           = wet.target
          method           = wet.method
-         print "Target: " + target
-         print "Method: " + method
+         print("Target: " + target)
+         print("Method: " + method)
 
-      print "#########################################"
+      print("#########################################")
 
    if options.creds:
-      print "\n[output syntax] Source,Username,Password"
+      print("\n[output syntax] Source,Username,Password")
       for cred in credentials.objects.all():
          source        = cred.source
          username      = cred.username
          password      = cred.password
-         print source + "," + username + "," + password
+         print(source + "," + username + "," + password)
 
 
    if options.setgw:
@@ -189,19 +189,19 @@
    if options.setiface:
       setup.objects.update(iface = options.setiface)
    if options.note:
-      print "\n[output syntax] Status, Title"
+      print("\n[output syntax] Status, Title")
       i = 1
       for note in notification.objects.all():
          message        = note.message
          title         = note.title
-         print str(i) + ": " + title + "," + message
+         print(str(i) + ": " + title + "," + message)
          i = i + 1
    if options.purge:
       response = raw_input("\nThis operation will purge the Subterfuge database. All attack data will be lost. Are you sure? [y/n] ")
       if response == "y" or response == "yes":
-         print "\nPurging Subterfuge Database Standby..."
+         print("\nPurging Subterfuge Database Standby...")
          os.system("cp /usr/share/subterfuge/base_db /usr/share/subterfuge/db")
-         print "Done!"
+         print("Done!")
 
 
    #VECTOR OPTIONS
@@ -216,10 +216,10 @@
       if active == "no":
          clear_vectors()
          vectors.objects.filter(name = "ARP Cache Poisoning").update(active = "yes")
-         print "Enabling Vector: " + aname + "\n"
+         print("Enabling Vector: " + aname + "\n")
       else:
          clear_vectors()
-         print "Disabling Vector: " + aname + "\n"
+         print("Disabling Vector: " + aname + "\n")
 
    if options.apgen:
       active = ""
@@ -232,10 +232,10 @@
       if active == "no":
          clear_vectors()
          vectors.objects.filter(name = "Wireless AP Generator").update(active = "yes")
-         print "Enabling Vector: " + aname + "\n"
+         print("Enabling Vector: " + aname + "\n")
       else:
          clear_vectors()
-         print "Disabling Vector: " + aname + "\n"
+         print("Disabling Vector: " + aname + "\n")
 
    if options.wpad:
       active = ""
@@ -248,10 +248,10 @@
       if active == "no":
          clear_vectors()
          vectors.objects.filter(name = "WPAD Hijacking").update(active = "yes")
-         print "Enabling Vector: " + aname + "\n"
+         print("Enabling Vector: " + aname + "\n")
       else:
          clear_vectors()
-         print "Disabling Vector: " + aname + "\n"
+         print("Disabling Vector: " + aname + "\n")
 
    if options.roguedhcp:
       active = ""
@@ -264,10 +264,10 @@
       if active == "no":
          clear_vectors()
          vectors.objects.filter(name = "Rogue DHCP").update(active = "yes")
-         print "Enabling Vector:" + aname + "\n"
+         print("Enabling Vector:" + aname + "\n")
       else:
          clear_vectors()
-         print "Disabling Vector: " + aname + "\n"
+         print("Disabling Vector: " + aname + "\n")
 
    #ARP Cache Poison Options
    if options.rate:
@@ -305,12 +305,12 @@
          installed.objects.filter(name = "httpcodeinjection").update(active = "yes")
       else:
          installed.objects.filter(name = "httpcodeinjection").update(active = "no")
-      print "HTTP Code Injection Enabled. \nEdit: /usr/share/subterfuge/modules/httpcodeinjection/inject.x"
+      print("HTTP Code Injection Enabled. \nEdit: /usr/share/subterfuge/modules/httpcodeinjection/inject.x")
 
 
    #LAUNCH ATTACK
    if options.launch:
-      print "Launching Subterfuge Methods from CLI!"
+      print("Launching Subterfuge Methods from CLI!")
       for settings in setup.objects.all():
          autoconf = settings.autoconf
 --- src/usr/share/subterfuge/update.py	2013-12-14 20:24:39.000000000 +0000
+++ /usr/share/subterfuge/update.py	2014-01-13 21:47:20.687921349 +0000
@@ -15,7 +15,7 @@
 autoupdate = c.fetchone()[0]
 
 def main():
-	print "Updating Subterfuge..."
+	print("Updating Subterfuge...")
 		#Build Revision
 	os.system('svn update /usr/share/subterfuge')
 
@@ -37,14 +37,14 @@
 
 
 	if int(current_revision_number) == int(revision):
-		print "Subterfuge is already at the latest version"
+		print("Subterfuge is already at the latest version")
 	else:
 			#Additional Configuration
-		print "Configuring Subterfuge..."
+		print("Configuring Subterfuge...")
 		os.system("python /usr/share/subterfuge/configure.py") 
-		print "Done!"
+		print("Done!")
 
-	print "Subterfuge " + version
+	print("Subterfuge " + version)
 	
 def updatecheck():
  try:
@@ -52,7 +52,7 @@
 		#Only Update Once
            #setup.objects.update(autoupdate = "no")
 
-	   print "Checking for updates. You can disable this feature through the settings page."
+	   print("Checking for updates. You can disable this feature through the settings page.")
 		   #Calculate version info
 	   release = int(current_revision_number) - int(initial_revision_number)
 	   version = str(major_release_version) + "." + str(minor_release_version) + "." + str(release)
@@ -69,8 +69,8 @@
 	   if version != newversion:
 	      os.system("python /usr/share/subterfuge/update.py")
 	   else:
-	      print "Subterfuge is still cutting edge!"
-	      print "Current version is: " + version
+	      print("Subterfuge is still cutting edge!")
+	      print("Current version is: " + version)
 
            time.sleep(5)
 		#Reset Autoupdate
