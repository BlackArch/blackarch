From: Sophie Brun <sophie@offensive-security.com>
Date: Wed, 20 Apr 2022 11:41:21 +0200
Subject: Adapt code for ndpi 4.x

---
 dissectors/tcp_ca/tcp_analysis.c  | 2 +-
 dissectors/tcp_grbg/tcp_garbage.c | 2 +-
 dissectors/udp_ca/udp_analysis.c  | 2 +-
 dissectors/udp_grbg/udp_garbage.c | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/dissectors/tcp_ca/tcp_analysis.c b/dissectors/tcp_ca/tcp_analysis.c
index b25ff41..4805e18 100644
--- a/dissectors/tcp_ca/tcp_analysis.c
+++ b/dissectors/tcp_ca/tcp_analysis.c
@@ -139,7 +139,7 @@ static ndpi_protocol nDPIPacket(packet *pkt, struct ndpi_flow_struct *l7flow, st
     when = pkt->cap_sec;
     when = when * NDPI_TICK_RES;
     when += pkt->cap_usec/1000;  /* (1000000 / NDPI_TICK_RES) */;
-    l7prot_id = ndpi_detection_process_packet(ndpi, l7flow, data, size, when, l7src, l7dst);
+    l7prot_id = ndpi_detection_process_packet(ndpi, l7flow, data, size, when);
 
     return l7prot_id;
 }
diff --git a/dissectors/tcp_grbg/tcp_garbage.c b/dissectors/tcp_grbg/tcp_garbage.c
index 3281c22..d9d1582 100644
--- a/dissectors/tcp_grbg/tcp_garbage.c
+++ b/dissectors/tcp_grbg/tcp_garbage.c
@@ -125,7 +125,7 @@ static ndpi_protocol nDPIPacket(packet *pkt, struct ndpi_flow_struct *l7flow, st
     when = when * NDPI_TICK_RES;
     when += pkt->cap_usec/1000;  /* (1000000 / NDPI_TICK_RES) */
     pthread_mutex_lock(&ndpi_mux);
-    l7prot_id = ndpi_detection_process_packet(ndpi, l7flow, data, size, when, l7src, l7dst);
+    l7prot_id = ndpi_detection_process_packet(ndpi, l7flow, data, size, when);
     pthread_mutex_unlock(&ndpi_mux);
 
     return l7prot_id;
diff --git a/dissectors/udp_ca/udp_analysis.c b/dissectors/udp_ca/udp_analysis.c
index 02fb092..71fa369 100644
--- a/dissectors/udp_ca/udp_analysis.c
+++ b/dissectors/udp_ca/udp_analysis.c
@@ -125,7 +125,7 @@ static ndpi_protocol nDPIPacket(packet *pkt, struct ndpi_flow_struct *l7flow, st
     when = when * NDPI_TICK_RES;
     when += pkt->cap_usec/1000;  /* (1000000 / NDPI_TICK_RES) */;
     pthread_mutex_lock(&ndpi_mux);
-    l7prot_id = ndpi_detection_process_packet(ndpi, l7flow, data, size, when, l7src, l7dst);
+    l7prot_id = ndpi_detection_process_packet(ndpi, l7flow, data, size, when);
     pthread_mutex_unlock(&ndpi_mux);
 
     return l7prot_id;
diff --git a/dissectors/udp_grbg/udp_garbage.c b/dissectors/udp_grbg/udp_garbage.c
index 30d2f95..31a95cc 100644
--- a/dissectors/udp_grbg/udp_garbage.c
+++ b/dissectors/udp_grbg/udp_garbage.c
@@ -113,7 +113,7 @@ static ndpi_protocol nDPIPacket(packet *pkt, struct ndpi_flow_struct *l7flow, st
     when = when * NDPI_TICK_RES;
     when += pkt->cap_usec/1000;  /* (1000000 / NDPI_TICK_RES) */;
     pthread_mutex_lock(&ndpi_mux);
-    l7prot_id = ndpi_detection_process_packet(ndpi, l7flow, data, size, when, l7src, l7dst);
+    l7prot_id = ndpi_detection_process_packet(ndpi, l7flow, data, size, when);
     pthread_mutex_unlock(&ndpi_mux);
 
     return l7prot_id;
